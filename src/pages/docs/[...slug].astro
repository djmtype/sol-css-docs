---
import { slugify } from "@/utils/global"

import { DOCS_NAV } from '@/config';


import { type CollectionEntry, getCollection } from "astro:content"
import { render } from "astro:content";
import Layout from "@/layouts/Layout.astro"
import DocsNav from "@/components/Base/DocsNav.astro"
export async function getStaticPaths() {
  const docs = await getCollection("docs")
  return docs.map((entry: any) => ({
    params: {
      slug: entry.id,
    },
    props: entry,
  }))
}
type Props = CollectionEntry<"docs">

// const { currentPage } = Astro.props;
const currentPage = Astro.url.pathname

const entry = Astro.props

type NavItem = {
  text: string;
  link: string;
}

type NavSection = {
  [header: string]: NavItem[];
}

const findHeader = (nav: NavSection, currentPage: string): string | null => {
  for (const [header, pages] of Object.entries(nav)) {
    if (pages.some(page => currentPage.includes(page.link))) {
      return header;
    }
  }
  return null;
};

const header = findHeader(DOCS_NAV, currentPage);


const { Content, headings } = await render(entry)
---

<Layout headings={headings} {...entry.data}>
  <aside id="main-aside">
    <DocsNav currentPage={currentPage} />
  </aside>
  <article class="main-article">
    <div class="prose">
      <hgroup>
        {header && <p set:html={header} />}
        <h1 id={slugify(entry.data.title)}>{entry.data.title}</h1>
      </hgroup>
      <Content />
    </div>
  </article>
</Layout>

<style is:global>
  .prose {
    --_flow: var(--spacing-flow);
  }
  .prose > * + * {
    margin-block-start: var(--_flow);
  }

  .prose hr {
    --_flow: var(--spacing-xl);
  }

  .prose hr + * {
    --_flow: var(--spacing-xl);
  }



  .prose hgroup + * {
    margin-block-start: var(--spacing-2xl);
  }

  .prose hgroup h1 {
    font-size: var(--font-size-5);
  }

  .prose hgroup p {
    color: var(--color-ink-primary);
    text-transform: uppercase;
    letter-spacing: .10em;
    font-weight: 600;
    font-size: var(--font-size-00);
  }
</style>
