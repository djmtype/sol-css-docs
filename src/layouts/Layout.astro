---
// import 'sol-css/src/sol.css'
import "@/styles/main.css"
import type { MarkdownHeading } from "astro"
import type { CollectionEntry } from "astro:content"

import BaseHead from "@/components/Base/Head.astro"
import SkipLink from "@/components/Base/SkipLink.astro"
import BaseHeader from "@/components/Base/Header.astro"

type Props = CollectionEntry<"docs">["data"] & {
  headings?: MarkdownHeading[]
  title: string
  description: string
}

const currentPage = Astro.url.pathname
const { title, description, headings, ...data } = Astro.props as Props
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
---

<html dir='ltr' lang='en-us'>
  <head>
    <BaseHead title={title} description={description} canonicalUrl={canonicalURL} {...data} />
  </head>

  <body>
    <SkipLink />
    <!-- <button id="themeToggle">Toggle</button> -->
    <BaseHeader currentPage={currentPage} />
    <div aria-live='polite' id='announce'></div>
    <main id='main-content wrapper'>
      <slot />
    </main>
    <footer></footer>
  </body>
</html>

<!-- <script is:inline>  
  const theme = (() => {    
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {      
      return localStorage.getItem('theme');    
    }    
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {      
      return 'dark';    
    }      
    return 'light';  
  })();

  if (theme === 'light') {    
    document.documentElement.classList.remove('dark');  
  } else {    
    document.documentElement.classList.add('dark');  
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {    
    const element = document.documentElement;    
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");    
    localStorage.setItem("theme", isDark ? "dark" : "light");  
  }

  document.getElementById("themeToggle").addEventListener("click", handleToggleClick);
</script> -->
