---
// import "@/styles/elements/_button.css";
const html = await Astro.slots.render("default")
import { v4 as uuidv4 } from "uuid"
import { Code } from "astro/components"

const uuid = uuidv4()

type Props = {
  style?: any
  theme?: any
  class?: string
  openState?: boolean
  lineWrap?: boolean
  summary?: string
  file?: any
  path?: string
  lang?: any
  rawFile?: any
}

const { file, lang = 'html', theme = 'css-variables', summary = 'HTML', path, rawFile, openState, lineWrap = false, class: className, ...restProps } = Astro.props as Props

// const { openState, class: className, ...restProps } = Astro.props as Props
---

<div class={className} style={{ ...restProps.style }} {...restProps} set:html={html} />

<details open={openState ? "" : undefined}>
  <summary>{summary}</summary>
  <div>
    {path && <code class="path">{path}</code>}
    <Code
      id={`component-${uuid}`}
      code={file || html}
      lang={lang}
      theme='css-variables'
      wrap={lineWrap}
    />
    <clipboard-copy for={`component-${uuid}`}>
      <span aria-label="Copy to clipboard">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" vector-effect="non-scaling-stroke"><rect width="8" height="4" x="8" y="2" rx="1" ry="1"/><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"/></g></svg>
      </span>
      <span class="notice" hidden>Copied!</span>
    </clipboard-copy>
  </div>
</details>

<script>
  import '@github/clipboard-copy-element';
</script>

<script is:inline>
  document.addEventListener('clipboard-copy', function (event) {
    const notice = event.target.querySelector('.notice')
    announce.setAttribute('aria-label', 'Copied');
    notice.hidden = false
    setTimeout(function () {
      announce.setAttribute('aria-label', '');
      notice.hidden = true
    }, 1000)
  })
</script>

<style>


  pre {
    margin: 0;
  }
  pre + [role="button"] {
    position: absolute;
    margin: 0;
    top: var(--spacing-4xs);
    right: var(--spacing-4xs);
    font-size: var(--font-size-00);
    padding: var(--spacing-button-block);
    gap: .5em;
  }

  pre + [role="button"] svg {
      width: 1.25em;
      height: 1.25em;
  }
  pre + [role="button"] > span:not([hidden]) {
    display: inline-flex;
  }


</style>

<style is:global>
    details:has(pre) > div {
    padding: 0;
    position: relative;
  }

  * + .panel + details {
    margin-block-start: var(--spacing-2xl);
  }
</style>
