body > header {
  background-color: var(--color-surface-bright);
}

body > header > div {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  padding-block: var(--spacing-xs);
  margin-inline: auto;
  inline-size: min(
    var(--breakpoint-lg),
    calc(100% - (var(--spacing-gutter) * 2))
  );
}

body > header nav > ul {
  display: flex;
}

body > header nav > ul a {
  padding: var(--spacing-input-block) var(--spacing-input-inline);
  display: flex;
}



main:has(> aside) {
  display: grid;
grid-template-columns: minmax(0, 1fr);
  gap: var(--spacing-gutter);
  padding-block: var(--spacing-gutter);

  margin-inline: auto;
  inline-size: min(min(var(--breakpoint-lg), 100%), calc(100% - (var(--spacing-gutter) * 2)));

  @media (width > 60rem) {
    padding-block: var(--spacing-2xl);
    grid-template-columns: minmax(min(100%, 20ch), .5fr) minmax(min(50vw, 30ch), 1.25fr);
    
  }
}




main > aside {
  @media(width > 60rem) {
    align-self: start;
    position: sticky;
    top: var(--spacing-gutter);
    z-index: 1;
  }
}

main > aside nav {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
}

main > aside nav a {
  display: flex;
padding: 0;
}

main > aside nav > ul {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
}

main > aside nav details > summary:not([role="button"]) {
  color: var(--color-ink-muted);
  border: unset;
  background: unset;
  padding: unset;
  &:hover, &:focus-visible {
    color: revert;
  }

  &::after {
    right: 0;
  }
  & + div {
    padding-block: unset;
    background: unset;
    border: unset;
    margin-block-start: unset;
  }
}




main > aside nav details[open] > summary:not([role="button"]) {
  color: var(--color-ink);
}

[aria-current="page"] {
  text-decoration: none;
  color: var(--color-anchor-hover);
  cursor: default;
  font-weight: 600;
}
